# This is a basic workflow to help you get started with MATLAB Actions

name: MATLAB Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
        release: [R2022b]
        
    # The type of runner that the job will run on
    runs-on: ${{matrix.platform}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
          
      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.platform }}-${{ matrix.release }}
            
      # Sets up MATLAB on the GitHub Actions runner
      - if: ${{ steps.cache-matlab.outputs.cache-hit != 'true' }}
        name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2-beta
        with: 
          release: ${{matrix.release}}
          
      - if: steps.cache-matlab.outputs.cache-hit == 'true'
        name: Install matlab-batch
        run: curl -sfL https://ssd.mathworks.com/supportfiles/ci/matlab-batch/v0/install.sh | bash -s --
          
          
      - if: steps.cache-matlab.outputs.cache-hit == 'true' && runner.os != 'Windows'
        name: Setup paths for unix
        run: echo "${{ runner.tool_cache }}/MATLAB/9.13.0/x64/bin" >> $GITHUB_PATH

          
      - if: steps.cache-matlab.outputs.cache-hit == 'true' && runner.os == 'Windows'
        name: Setup paths for Windows
        run: |
          echo "C:\Program Files\matlab-batch" >> $GITHUB_PATH
          echo "${{ runner.tool_cache }}\MATLAB\9.13.0\x64\bin" >> $GITHUB_PATH


      # Runs a set of commands using the runners shell
      - name: Run all tests
        uses: matlab-actions/run-tests@v1
        with:
          source-folder: code

      # As an alternative to run-tests, you can use run-command to execute a MATLAB script, function, or statement.
      #- name: Run all tests
      #  uses: matlab-actions/run-command@v1
      #  with:
      #    command: addpath('code'); results = runtests('IncludeSubfolders', true); assertSuccess(results);
